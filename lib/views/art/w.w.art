<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="//cdn.bootcss.com/twitter-bootstrap/4.5.3/css/bootstrap.min.css" rel="stylesheet">
    <link href="//cdn.bootcss.com/github-markdown-css/4.0.0/github-markdown.min.css" rel="stylesheet">
    <link rel="shortcut icon" href="{{@ $V.site.logo }}">
    <title>{{ $V.site.name }}</title>
    <style>a#down-btn-a {
        color: #6c757d;
    }

    a:hover, a#down-btn-a:hover {
        color: red;
        text-decoration: none;
    }

    @media (max-width: 768px) {
        #op-list tr > th:nth-child(3), #op-list tr > td:nth-child(3) {
            display: none;
        }
    }

    @media (max-width: 992px) {
        #op-list tr > th:nth-child(2), #op-list tr > td:nth-child(2) {
            display: none;
        }
    }
    </style>
</head>

<body>

<nav class="navbar sticky-top navbar-dark bg-dark navbar-expand-lg">
    <div class="container">
        <a target="_blank" href="" class="navbar-brand">
            <img src="{{@ $V.site.logo }}" alt="logo" class="d-inline-block align-top" style="width: 32px;">
            {{ $V.site.name }}
        </a>
    </div>
</nav>
<div class="container mt-3">
    <nav id="navbar-href" aria-label="breadcrumb">
        {{ set navs=$V.navs}}
        <ol class="breadcrumb">
            {{ each navs}}
            {{ if $index===0 }}
            <li class="breadcrumb-item"><a href="{{@ $value.href }}">Home</a></li>
            {{ else if $index===navs.length-1 }}
            <li class="breadcrumb-item active" aria-current="page">{{ $value.name }}</li>
            {{else}}
            <li class="breadcrumb-item"><a href="{{@ $value.href }}">{{ $value.name }}</a></li>
            {{ /if }}
            {{ /each }}
        </ol>
    </nav>
    {{ if response.isList }}
    <div class="border rounded mt-3 table-responsive">
        {{ if $V.isEmpty }}
        <p style="text-align: center;" class="m-3">这里空空如也!</p>
        {{ else }}
        <table class="table table-hover mb-0" id="op-list">
            <thead class="thead-light">
            <tr>
                <th scope="col">Name</th>
                <th scope="col" style="min-width: 220px;">Time</th>
                <th scope="col" class="text-right" style="min-width: 120px;">Size</th>
            </tr>
            </thead>
            <tbody>
            {{ if $V.hasPrev }}
            <tr>
                <td><a href="{{@ $V.prevHref }}">Previous...</a></td>
                <td></td>
                <td></td>
            </tr>
            {{ else if $V.hasParent }}
            <tr>
                <td><a href="../">..</a></td>
                <td></td>
                <td></td>
            </tr>
            {{ /if }}

            {{ each $V.list }}
            <tr>
                <td><a href="{{@ $V.previewHref($value) }}"
                       class="{{ $value.type===0?'file':'folder'}}"
                >{{ $value.name + ($value.type===0?'':'/')}}</a></td>
                <td>{{ $value.time }}</td>
                <td class="text-right">{{ $value.size }}</td>
            </tr>
            {{ /each }}

            {{ if $V.hasNext }}
            <tr>
                <td><a href="{{@ $V.nextHref }}">Next...</a></td>
                <td></td>
                <td></td>
            </tr>
            {{ /if }}
            </tbody>
        </table>
        <script>
            (function () {
                function formatSize(size) {
                    if (size === "" || size === "NaN") {
                        return "";
                    }
                    size = Number(size);
                    let count = 0;
                    while (size >= 1024) {
                        size /= 1024;
                        count++;
                    }
                    return size.toFixed(2) + [' B', ' KB', ' MB', ' GB', ' TB'][count];
                }

                function formatDate(str) {
                    let oDate = new Date(str);
                    if ('Invalid Date' === oDate.toString()) {
                        return "";
                    }
                    let oYear = oDate.getFullYear(),
                        oMonth = oDate.getMonth() < 9 ? "0" + (oDate.getMonth() + 1) : (oDate.getMonth() + 1),
                        oDay = oDate.getDate() < 10 ? "0" + oDate.getDate() : oDate.getDate(),
                        oHour = oDate.getHours() < 10 ? "0" + oDate.getHours() : oDate.getHours(),
                        oMinute = oDate.getMinutes() < 10 ? "0" + oDate.getMinutes() : oDate.getMinutes(),
                        oSecond = oDate.getSeconds() < 10 ? "0" + oDate.getSeconds() : oDate.getSeconds();
                    return oYear + '-' + oMonth + '-' + oDay + " " + oHour + ":" + oMinute + ":" + oSecond;
                }

                const pL = document.getElementById('op-list');
                if (pL) {
                    pL.querySelectorAll('tr>td:nth-child(2)').forEach(e => e.textContent = formatDate(e.textContent));
                    pL.querySelectorAll('tr>td:nth-child(3)').forEach(e => e.textContent = formatSize(e.textContent));
                }
                if (document.getElementsByClassName("file").length > 0){
                    var x = document.getElementsByClassName("file");
                    var i;
                    var arr = [];
                    for (i = 0; i < x.length; i++) {
                        if (['jpg', 'jpeg', 'gif', 'png', 'svg', 'webp'].includes(x[i].innerHTML.slice(x[i].innerHTML.lastIndexOf('.') + 1))) arr.push({ href: x[i].href, name: x[i].innerHTML });
                    }
                    sessionStorage.pages=JSON.stringify(arr);
                }
            })();
        </script>
        {{ /if }}
    </div>

    {{ else if response.isFile }}

    {{ set type=$V.previewType }}
    {{ set url=$V.downloadUrl }}
    <div class="input-group">
	{{ if type === 'image' }}
        <div class="input-group-append">
            <button type="button" class="btn btn-outline-secondary" style="display:none;border-radius: .25rem 0 0 .25rem;" id="last">Last</button>
	    <button type="button" class="btn btn-outline-secondary" style="display:none;" id="next">Next</button>
        </div>
	{{ /if }}
        <select class="custom-select" id="proxy-opt">
            <option value="" selected>No Proxy (default)</option>
            {{ each $V.site.proxy }}
            <option value="{{ $value }}">{{ $value }}</option>
            {{ /each }}
        </select>

        <div class="input-group-append">
            <button class="btn btn-outline-secondary" id="proxy-submit" type="button">Proxy</button>
            <button type="button" class="btn btn-outline-secondary"><a href="{{@ url }}" id="down-btn-a">Down</a>
            </button>
            <button type="button" class="btn btn-outline-secondary" id="op-share-btn">Share</button>
        </div>
    </div>

    <div class="border rounded my-3 p-3" id="op-file">
        {{ if type === 'image' }}
        <img src="{{@ url }}" class="rounded mx-auto d-block img-fluid" max-width="100%" alt="图片加载失败">
        {{ else if type === 'video' }}
        <div id="op-preview-video"></div>
        <div class="input-group mt-2">
            <input type="url" id="op-preview-video-subtitle" class="form-control"
                   placeholder="subtitle-url: http://example.com/" value="{{ $V.file.name+'.webvtt' }}"
                   aria-label="url">
            <div class="input-group-append">
                <button type="button" class="btn btn-outline-secondary"
                        onclick="window.location = (location.search||'?').replace(/&?subtitle=[^&]*/,'') + '&subtitle='+encodeURIComponent((document.querySelector('#op-preview-video-subtitle')||'').value || '')">
                    尝试添加字幕
                </button>
            </div>
        </div>
        <script src="https://cdn.bootcss.com/dplayer/1.26.0/DPlayer.min.js"></script>
        <script>
            const dpConfig = {
                element: document.getElementById('op-preview-video'),
                video: {url: '{{@ url }}', pic: '', type: 'auto'},
            };
            let t = new URL(location.href).searchParams.get('subtitle');
            if (t) {
                dpConfig.subtitle = {
                    url: t,
                    type: 'webvtt',
                    fontSize: '25px',
                    bottom: '10%',
                    color: '#b7daff',
                };
                (document.querySelector('#op-preview-video-subtitle') || '').value = t;
                (document.querySelector('#op-preview-video-subtitle') || '').setAttribute('placeHolder', 'using: ' + t);
            }
            window.dp = new DPlayer(dpConfig);</script>
        {{ else if type === 'audio' }}
        <audio src="{{@ url }}" controls autoplay style="width: 75%;" class="rounded mx-auto d-block"></audio>
        {{ else if type === 'office' }}
        <ul style="margin: 0;">
            <li><a target="_blank"
                   href="https://view.officeapps.live.com/op/view.aspx?src={{ $V.encodeURIComponent(url) }}">使用 office
                apps
                预览</a></li>
            <li><a target="_blank" href="http://api.idocv.com/view/url?url={{ $V.encodeURIComponent(url) }}">使用 I Doc
                View
                预览</a></li>
        </ul>
        {{ else if type==='pdf' }}
        <div id="op-preview-pdf"></div>
        <script src="https://cdn.bootcss.com/pdfobject/2.2.4/pdfobject.min.js"></script>
        <script>PDFObject.embed('{{@ url }}', "#op-preview-pdf");</script>
        {{ else if type==='text' }}
        <pre><code id="op-preview-text">loading...</code></pre>
        <link href="https://cdn.bootcss.com/highlight.js/10.4.1/styles/xcode.min.css" rel="stylesheet">
        <script src="https://cdn.bootcss.com/highlight.js/10.4.1/highlight.min.js"></script>
        <script>
            (function () {
                const pT = document.getElementById('op-preview-text');
                if (pT) {
                    fetch('{{@ url }}').then(response => {
                        if (response.ok) {
                            return response.text();
                        } else {
                            throw new Error('response error');
                        }
                    }).then(data => {
                        pT.textContent = data;
                        hljs.highlightBlock(pT);
                    }).catch(err => pT.textContent = "Oh, " + err);
                }
            })();
        </script>
        {{ else if type==='bigText'}}
        <p style="text-align: center;" class="mb-0">该文本文件太大, 不支持预览 :-(</p>
        {{ else }}
        <p style="text-align: center;" class="mb-0">此格式({{ $V.file.mime }})不支持预览 :-(</p>
        {{ /if }}
    </div>

    <script src="https://cdn.bootcss.com/js-cookie/2.2.1/js.cookie.min.js"></script>
    <script>
        (function () {
            const sB = document.getElementById('op-share-btn');
            if (sB) {
                sB.addEventListener('click', (event) => {
                    copyTextContent(null, window.location.href);
                    let target = event.target;
                    let tt = target.textContent;
                    target.innerHTML = '已复制';
                    setTimeout(() => target.innerHTML = tt, 500);
                });

                function copyTextContent(source, text) {
                    let result = false;
                    let target = document.createElement('pre');
                    target.style.opacity = '0';
                    target.textContent = text || source.textContent;
                    document.body.appendChild(target);
                    try {
                        let range = document.createRange();
                        range.selectNode(target);
                        window.getSelection().removeAllRanges();
                        window.getSelection().addRange(range);
                        document.execCommand('copy');
                        window.getSelection().removeAllRanges();
                        result = true;
                    } catch (e) {
                    }
                    document.body.removeChild(target);
                    return result;
                }
            }

            var now = document.getElementsByClassName("breadcrumb-item active")[0].innerHTML;
            let arr = null;
            if(sessionStorage.pages!==undefined)arr = JSON.parse(sessionStorage.pages);
            if(arr && arr.length>0){
                const last = document.getElementById("last");
                const next = document.getElementById("next");

                last.style.display="inline";
                next.style.display="inline";

                var last_href = null;
                var next_href = null;

                for (i = 0; i < arr.length; i++) {
                    if(arr[i].name == now){
                        if (i>0)last_href=arr[i-1].href
                        if (i<arr.length-1)next_href = arr[i+1].href
                    }
                }
                if(!last_href)last.innerHTML="First one";
                if(!next_href)next.innerHTML="Last one";
                if (last && last_href) {
                    last.addEventListener('click', (event) => {
                        location.href = last_href;
                    });
                }
                if (next && next_href) {
                    next.addEventListener('click', (event) => {
                        location.href = next_href;
                    });
                }
            }

            if (Cookies.get('proxy')) {
                let s = document.getElementById('proxy-opt').options;
                let c = Cookies.get('PROXY_DOWN');
                for (let i = 0; i < s.length; i++) {
                    if (s[i].value === c) {
                        s[i].selected = "selected";
                        break;
                    }
                }
            }
            document.getElementById('proxy-submit').onclick = function () {
                Cookies.set('PROXY_DOWN', document.getElementById('proxy-opt').value, {expires: 7});
                window.location.reload();
            };
        })();
    </script>

    {{ else }}

    {{ if $V.hasPassword }}
    <div class="border rounded my-3 pt-3">
        <form method="post" class="form-inline">
            <div class="form-group mx-sm-3 mb-2">
                <label>
                    <input type="password" name="password" class="form-control" placeholder="{{ $V.passwordHint }}">
                </label>
            </div>
            <button type="submit" class="btn btn-primary mb-2">Submit</button>
        </form>
    </div>
    {{ /if }}
    <div class="border rounded my-3 p-3">
        <div>{{ response.message }}</div>
        <pre><code>{{ $V.jsonData }}</code></pre>
    </div>
    {{ /if }}

    <div class="card mt-3">
        <div class="card-header">README.md</div>
        <div class="card-body markdown-body" id="op-readme">{{ $V.readme}}</div>
        <script src="https://cdn.bootcss.com/marked/1.2.7/marked.js"></script>
        <script>
            (function f() {
                const pR = document.getElementById('op-readme');
                pR.innerHTML = marked(pR.textContent);
                const url = '{{@ $V.readmeUrl }}';
                if (url) {
                    fetch(url).then(response => {
                        if (response.ok) {
                            return response.text();
                        } else {
                            throw new Error('response error');
                        }
                    }).then(data => {
                        pR.innerHTML = marked(data);
                    }).catch(err => pR.innerHTML = "Oh, " + err);
                }
            })();</script>
    </div>
    {{@ $V.site.html }}
</div>
</body>
</html>